{"version":3,"sources":["components/Header.js","actions/index.js","components/Link.js","containers/FilterLink.js","components/Buttons.js","containers/AddIdea.js","components/Idea.js","components/IdeaList.js","containers/VisibleIdeaList.js","components/App.js","reducers/ideas.js","reducers/visibilityFilter.js","reducers/index.js","index.js"],"names":["Wrapper","styled","div","Header","className","src","alt","title","nextIdeaId","localStorage","getItem","JSON","parse","ideas","length","editIdea","text","date","id","type","VisibilityFilters","Link","active","children","onClick","disabled","connect","state","ownProps","filter","visibilityFilter","dispatch","Buttons","FilterLink","onSubmit","e","preventDefault","value","trim","addIdea","separator","newDate","Date","getDate","month","getMonth","year","getFullYear","getCurrentDate","ref","node","placeholder","required","completed","useState","isEdit","setIsEdit","editMode","ideaToggleText","style","opacity","onChange","event","target","IdeaList","toggleIdea","map","idea","key","getVisibleIdeas","t","Error","App","VisibleIdeaList","action","Object","assign","combineReducers","persistedState","store","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","render","document","getElementById","subscribe","setItem","stringify","getState"],"mappings":"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","file":"static/js/main.c14a26db.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Header = () => {\n\n    return (\n        <Wrapper>\n            <header className='App-header'>\n                <img className='logo' src='https://res-5.cloudinary.com/crunchbase-production/image/upload/c_lpad,h_256,w_256,f_auto,q_auto:eco/v1435909643/liv6vlkrvucn35ubnhjp.png' alt='Clearscore' title='Clearscore'/>\n            </header>\n        </Wrapper>\n    )\n}\n\nconst Wrapper = styled.div`\n.App-header {\n    background: #fff;\n    min-height: 10vh;\n    display: flex;\n    justify-content: center;\n    position: fixed;\n    top: 0;\n    width: -webkit-fill-available;\n    z-index: 2;\n    box-shadow: 0 0.125rem 0.125rem 0 rgba(0,0,0,0.1);\n    .logo {\n        width: 120px;\n    }\n}\n`\n\nexport default Header","let nextIdeaId = localStorage.getItem('reduxState') ? JSON.parse(localStorage.getItem('reduxState')).ideas.length : 0\nexport const addIdea = (title, text, date) => ({\n  type: 'ADD_IDEA',\n  id: nextIdeaId++,\n  title,\n  text,\n  date,\n})\n\nexport const editIdea = (title, text, date, id) => ({\n  type: 'EDIT_IDEA',\n  id,\n  title,\n  text,\n  date,\n})\n\nexport const setVisibilityFilter = filter => ({\n  type: 'SET_VISIBILITY_FILTER',\n  filter\n})\n\nexport const toggleIdea = id => ({\n  type: 'TOGGLE_IDEA',\n  id\n})\n\nexport const VisibilityFilters = {\n  SHOW_COMPLETED: 'SHOW_COMPLETED',\n  SHOW_ACTIVE: 'SHOW_ACTIVE'\n}","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Link = ({ active, children, onClick }) => (\n      <button\n        onClick={onClick}\n        disabled={active}\n      >\n      {children}\n      </button>\n\n)\n\nLink.propTypes = {\n  active: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func.isRequired\n}\nexport default Link\n","import { connect } from 'react-redux'\nimport { setVisibilityFilter } from '../actions'\nimport Link from '../components/Link'\n\nconst mapStateToProps = (state, ownProps) => ({\n  active: ownProps.filter === state.visibilityFilter\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onClick: () => dispatch(setVisibilityFilter(ownProps.filter))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Link)\n","import React from 'react'\nimport styled from 'styled-components';\nimport FilterLink from '../containers/FilterLink'\nimport { VisibilityFilters } from '../actions'\n\nconst Buttons = () => (\n  <Wrapper>\n    <FilterLink filter={VisibilityFilters.SHOW_ACTIVE}>\n      Good Ideas\n    </FilterLink>\n    <FilterLink filter={VisibilityFilters.SHOW_COMPLETED}>\n      What was I thinking?\n    </FilterLink>\n  </Wrapper>\n)\n\nconst Wrapper = styled.div`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\n  button {\n    margin: 1% 4%;\n    width: 91%;\n  }\n`\n\nexport default Buttons\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { addIdea } from '../actions'\nimport styled from 'styled-components';\n\nconst getCurrentDate = (separator='-')=> {\n\nlet newDate = new Date()\nlet date = newDate.getDate();\nlet month = newDate.getMonth() + 1;\nlet year = newDate.getFullYear();\n\nreturn `${date}${separator}${month<10?`0${month}`:`${month}`}${separator}${year}`\n}\n\nconst AddIdea = ({ dispatch }) => {\n  let title\n  let text\n  return (\n    <Wrapper>\n      <div>\n        <form onSubmit={e => {\n          e.preventDefault()\n          if (!title.value.trim()) {\n            return\n          }\n          if (!text.value.trim()) {\n            return\n          }\n          dispatch(addIdea(title.value, text.value, getCurrentDate()))\n          title.value = ''\n          text.value = ''\n        }}>\n          <input ref={node => title = node} placeholder='Add title...' required/>\n          <input ref={node => text = node} placeholder='Add description...' required/>\n          <button type=\"submit\">\n            Add Idea\n          </button>\n        </form>\n      </div>\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.div`\nmargin: 22vh 0 -3vh 0;\npadding: 0 0 10% 0;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\n  button {\n    margin: 1% 4%;\n    width: 91%;\n    border: 1px solid #fff;\n  }\n}\n`\n\nexport default connect()(AddIdea)\n","import React, {useState} from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { editIdea } from '../actions'\n\nconst Idea = ({ dispatch, onClick, completed, title, text, date, id }) => {\n  const [isEdit, setIsEdit] = useState(false);\n  const handleTitleChange = event => {\n    title = event.target.value\n    dispatch(editIdea(title, text, date, id))\n  }\n  const handleTextChange = event => {\n    text = event.target.value\n    dispatch(editIdea(title, text, date, id))\n  }\n  const editMode = () => {\n    setIsEdit(!isEdit)\n  }\n  const ideaToggleText = completed ? 'Add' : 'Remove'\n  return (\n    <div className='idea' \n      style={{\n      opacity: completed ? '0.5' : '1'}}\n      >\n      {isEdit ? \n        <>\n        <input type=\"text\" value={title} onChange={handleTitleChange} placeholder={title} className='focus' />\n        <input type=\"text\" value={text} onChange={handleTextChange} placeholder={text}/>\n        <div className='options'>\n          <small onClick={editMode}>Save</small>\n        </div>\n        </>\n        :\n        <>\n        <h3>{title}</h3>\n        <p>{text}</p>\n        <p>{date}</p>\n        <div className='options'>\n          <small onClick={editMode}>Edit</small>\n          <small onClick={onClick}>{ideaToggleText}</small>\n        </div>\n        </>\n      }\n    </div>\n  )\n}\n\nIdea.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  completed: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired\n}\n\nexport default connect()(Idea)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components';\n\nimport Idea from './Idea'\n\nconst IdeaList = ({ ideas, toggleIdea }) => (\n  <Wrapper>\n      {ideas.map(idea =>\n        <Idea\n          key={idea.id}\n          {...idea}\n          onClick={() => toggleIdea(idea.id)}\n        />\n      )}\n  </Wrapper>\n)\n\nIdeaList.propTypes = {\n  ideas: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    completed: PropTypes.bool.isRequired,\n    title: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired\n  }).isRequired).isRequired,\n  toggleIdea: PropTypes.func.isRequired\n}\n\nconst Wrapper = styled.div`\ndisplay: flex;\njustify-content: space-evenly;\nflex-direction: row;\nflex-wrap: wrap;\nflex: 1 1 auto,\nmargin: .875rem auto;\npadding: 1% 9% 0 8%;\n  .idea {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin: .875rem auto;\n    border-radius: .1875rem;\n    box-shadow: 0 0.125rem 0.125rem 0 rgba(0,0,0,0.1);\n    padding: 0 2rem;\n    background: #233143;\n    margin: 1rem;\n    h3, p {\n      margin-bottom: 0;\n    }\n    input {\n      width: 100%;\n      color: #fff;\n      border: none;\n      background: #233143;\n      font-size: 18px;\n    }\n    input.focus {\n      border-bottom: 1px solid #0f81a3;\n    }\n    .options {\n      display: flex;\n      flex-direction: row;\n      small {\n        margin: 1rem 1rem 1rem 0;\n        color: #0f81a3;\n      }\n    }\n  }\n`\n\nexport default IdeaList\n","import { connect } from 'react-redux'\nimport { toggleIdea } from '../actions'\nimport IdeaList from '../components/IdeaList'\nimport { VisibilityFilters } from '../actions'\n\nconst getVisibleIdeas = (ideas, filter) => {\n  switch (filter) {\n    case VisibilityFilters.SHOW_COMPLETED:\n      return ideas.filter(t => t.completed)\n    case VisibilityFilters.SHOW_ACTIVE:\n      return ideas.filter(t => !t.completed)\n    default:\n      throw new Error('Unknown filter: ' + filter)\n  }\n}\n\nconst mapStateToProps = state => ({\n  ideas: getVisibleIdeas(state.ideas, state.visibilityFilter)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  toggleIdea: id => dispatch(toggleIdea(id))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(IdeaList)\n","import React from 'react'\nimport styled from 'styled-components';\nimport Header from './Header'\nimport Buttons from './Buttons'\nimport AddIdea from '../containers/AddIdea'\nimport VisibleIdeaList from '../containers/VisibleIdeaList'\n\nconst App = () => (\n    <>\n    <Header />\n    <Wrapper>\n      <AddIdea />\n      <Buttons />\n    </Wrapper>\n    <VisibleIdeaList />\n    </>\n)\n\nconst Wrapper = styled.div`\n  text-align: center;\n  max-width: 320px;\n  margin: 0 auto;\n`\n\nexport default App\n\n","\n\nconst ideas = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_IDEA':\n      return [\n        ...state,\n        {\n          id: action.id,\n          title: action.title,\n          text: action.text,\n          date: action.date,\n          completed: false\n        }\n      ]\n    case 'EDIT_IDEA':\n      return [\n        Object.assign({}, action.id, {\n          id: action.id,\n          title: action.title,\n          text: action.text,\n          date: action.date,\n          completed: false\n        })\n      ]\n    case 'TOGGLE_IDEA':\n      return state.map(idea =>\n        (idea.id === action.id)\n          ? {...idea, completed: !idea.completed}\n          : idea\n      )\n    default:\n      return state\n  }\n}\n\nexport default ideas\n","import { VisibilityFilters } from '../actions'\n\nconst visibilityFilter = (state = VisibilityFilters.SHOW_ACTIVE, action) => {\n  switch (action.type) {\n    case 'SET_VISIBILITY_FILTER':\n      return action.filter\n    default:\n      return state\n  }\n}\n\nexport default visibilityFilter\n","import { combineReducers } from 'redux'\nimport ideas from './ideas'\nimport visibilityFilter from './visibilityFilter'\n\nexport default combineReducers({\n  ideas,\n  visibilityFilter\n})\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport './global.css';\nimport App from './components/App'\nimport rootReducer from './reducers'\n\nconst persistedState = localStorage.getItem('reduxState') ? JSON.parse(localStorage.getItem('reduxState')) : {}\n\nconst store = createStore(\n  rootReducer, \n  persistedState,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\n\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\nstore.subscribe(()=>{ \n    localStorage.setItem('reduxState', JSON.stringify(store.getState())) \n})"],"sourceRoot":""}