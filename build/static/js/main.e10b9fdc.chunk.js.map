{"version":3,"sources":["components/Header.js","actions/index.js","components/Link.js","containers/FilterLink.js","components/Buttons.js","containers/AddIdea.js","components/Idea.js","components/IdeaList.js","containers/VisibleIdeaList.js","components/App.js","reducers/ideas.js","reducers/visibilityFilter.js","reducers/index.js","index.js"],"names":["Wrapper","styled","div","Header","className","src","alt","title","nextIdeaId","localStorage","getItem","JSON","parse","ideas","length","VisibilityFilters","Link","active","children","onClick","disabled","connect","state","ownProps","filter","visibilityFilter","dispatch","type","Buttons","FilterLink","text","onSubmit","e","preventDefault","value","trim","date","id","addIdea","separator","newDate","Date","getDate","month","getMonth","year","getFullYear","getCurrentDate","ref","node","placeholder","required","Idea","completed","useState","ideaTitle","setIdeaTitle","ideaText","setIdeaText","isEdit","setIsEdit","editMode","ideaToggleText","style","opacity","onChange","event","target","IdeaList","toggleIdea","map","idea","key","getVisibleIdeas","t","Error","App","VisibleIdeaList","action","combineReducers","persistedState","store","createStore","rootReducer","render","document","getElementById","subscribe","setItem","stringify","getState"],"mappings":"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","file":"static/js/main.e10b9fdc.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Header = () => {\n\n    return (\n        <Wrapper>\n            <header className='App-header'>\n                <img className='logo' src='https://res-5.cloudinary.com/crunchbase-production/image/upload/c_lpad,h_256,w_256,f_auto,q_auto:eco/v1435909643/liv6vlkrvucn35ubnhjp.png' alt='Clearscore' title='Clearscore'/>\n            </header>\n        </Wrapper>\n    )\n}\n\nconst Wrapper = styled.div`\n.App-header {\n    background: #fff;\n    min-height: 10vh;\n    display: flex;\n    justify-content: center;\n    position: fixed;\n    top: 0;\n    width: -webkit-fill-available;\n    z-index: 2;\n    box-shadow: 0 0.125rem 0.125rem 0 rgba(0,0,0,0.1);\n    .logo {\n        width: 120px;\n    }\n}\n`\n\nexport default Header","let nextIdeaId = localStorage.getItem('reduxState') ? JSON.parse(localStorage.getItem('reduxState')).ideas.length : 0\nexport const addIdea = (title, text, date) => ({\n  type: 'ADD_IDEA',\n  id: nextIdeaId++,\n  title,\n  text,\n  date,\n})\n\nexport const setVisibilityFilter = filter => ({\n  type: 'SET_VISIBILITY_FILTER',\n  filter\n})\n\nexport const toggleIdea = id => ({\n  type: 'TOGGLE_IDEA',\n  id\n})\n\nexport const VisibilityFilters = {\n  SHOW_ALL: 'SHOW_ALL',\n  SHOW_COMPLETED: 'SHOW_COMPLETED',\n  SHOW_ACTIVE: 'SHOW_ACTIVE'\n}","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Link = ({ active, children, onClick }) => (\n      <button\n        onClick={onClick}\n        disabled={active}\n      >\n      {children}\n      </button>\n\n)\n\nLink.propTypes = {\n  active: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func.isRequired\n}\nexport default Link\n","import { connect } from 'react-redux'\nimport { setVisibilityFilter } from '../actions'\nimport Link from '../components/Link'\n\nconst mapStateToProps = (state, ownProps) => ({\n  active: ownProps.filter === state.visibilityFilter\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onClick: () => dispatch(setVisibilityFilter(ownProps.filter))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Link)\n","import React from 'react'\nimport styled from 'styled-components';\nimport FilterLink from '../containers/FilterLink'\nimport { VisibilityFilters } from '../actions'\n\nconst Buttons = () => (\n  <Wrapper>\n    <FilterLink filter={VisibilityFilters.SHOW_ACTIVE}>\n      Good Ideas\n    </FilterLink>\n    <FilterLink filter={VisibilityFilters.SHOW_COMPLETED}>\n      What was I thinking?\n    </FilterLink>\n  </Wrapper>\n)\n\nconst Wrapper = styled.div`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\n  button {\n    margin: 1% 4%;\n    width: 91%;\n  }\n`\n\nexport default Buttons\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { addIdea } from '../actions'\nimport styled from 'styled-components';\n\nconst getCurrentDate = (separator='-')=> {\n\nlet newDate = new Date()\nlet date = newDate.getDate();\nlet month = newDate.getMonth() + 1;\nlet year = newDate.getFullYear();\n\nreturn `${date}${separator}${month<10?`0${month}`:`${month}`}${separator}${year}`\n}\n\nconst AddIdea = ({ dispatch }) => {\n  let title\n  let text\n  return (\n    <Wrapper>\n      <div>\n        <form onSubmit={e => {\n          e.preventDefault()\n          if (!title.value.trim()) {\n            return\n          }\n          if (!text.value.trim()) {\n            return\n          }\n          dispatch(addIdea(title.value, text.value, getCurrentDate()))\n          title.value = ''\n          text.value = ''\n        }}>\n          <input ref={node => title = node} placeholder='Add title...' required/>\n          <input ref={node => text = node} placeholder='Add description...' required/>\n          <button type=\"submit\">\n            Add Idea\n          </button>\n        </form>\n      </div>\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.div`\nmargin: 22vh 0 -3vh 0;\npadding: 0 0 10% 0;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\n  button {\n    margin: 1% 4%;\n    width: 91%;\n    border: 1px solid #fff;\n  }\n}\n`\n\nexport default connect()(AddIdea)\n","import React, {useState} from 'react'\nimport PropTypes from 'prop-types'\n\nconst Idea = ({ onClick, completed, title, text, date }) => {\n  const [ideaTitle, setIdeaTitle] = useState(title);\n  const [ideaText, setIdeaText] = useState(text);\n  const [isEdit, setIsEdit] = useState(false);\n  const handleTitleChange = event => {\n    const {value} = event.target\n    setIdeaTitle(value)\n  }\n  const handleTextChange = event => {\n    const {value} = event.target\n    setIdeaText(value)\n  }\n  const editMode = () => {\n    setIsEdit(!isEdit)\n  }\n  const ideaToggleText = completed ? 'Add' : 'Remove'\n  return (\n    <div className='idea' \n      style={{\n      opacity: completed ? '0.5' : '1'}}\n      >\n      {isEdit ? \n        <>\n        <input type=\"text\" value={ideaTitle} onChange={handleTitleChange} placeholder={ideaTitle} className='focus' />\n        <input type=\"text\" value={ideaText} onChange={handleTextChange} placeholder={ideaText}/>\n        <div className='options'>\n          <small onClick={editMode}>Save</small>\n        </div>\n        </>\n        :\n        <>\n        <h3>{ideaTitle}</h3>\n        <p>{ideaText}</p>\n        <p>{date}</p>\n        <div className='options'>\n          <small onClick={editMode}>Edit</small>\n          <small onClick={onClick}>{ideaToggleText}</small>\n        </div>\n        </>\n      }\n    </div>\n  )\n}\n\nIdea.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  completed: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired\n}\n\nexport default Idea\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components';\n\nimport Idea from './Idea'\n\nconst IdeaList = ({ ideas, toggleIdea }) => (\n  <Wrapper>\n      {ideas.map(idea =>\n        <Idea\n          key={idea.id}\n          {...idea}\n          onClick={() => toggleIdea(idea.id)}\n        />\n      )}\n  </Wrapper>\n)\n\nIdeaList.propTypes = {\n  ideas: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    completed: PropTypes.bool.isRequired,\n    title: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired\n  }).isRequired).isRequired,\n  toggleIdea: PropTypes.func.isRequired\n}\n\nconst Wrapper = styled.div`\ndisplay: flex;\njustify-content: space-evenly;\nflex-direction: row;\nflex-wrap: wrap;\nflex: 1 1 auto,\nmargin: .875rem auto;\npadding: 1% 9% 0 8%;\n  .idea {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin: .875rem auto;\n    border-radius: .1875rem;\n    box-shadow: 0 0.125rem 0.125rem 0 rgba(0,0,0,0.1);\n    padding: 0 2rem;\n    background: #233143;\n    margin: 1rem;\n    h3, p {\n      margin-bottom: 0;\n    }\n    input {\n      width: 100%;\n      color: #fff;\n      border: none;\n      background: #233143;\n      font-size: 18px;\n    }\n    input.focus {\n      border-bottom: 1px solid #0f81a3;\n    }\n    .options {\n      display: flex;\n      flex-direction: row;\n      small {\n        margin: 1rem 1rem 1rem 0;\n        color: #0f81a3;\n      }\n    }\n  }\n`\n\nexport default IdeaList\n","import { connect } from 'react-redux'\nimport { toggleIdea } from '../actions'\nimport IdeaList from '../components/IdeaList'\nimport { VisibilityFilters } from '../actions'\n\nconst getVisibleIdeas = (ideas, filter) => {\n  switch (filter) {\n    case VisibilityFilters.SHOW_COMPLETED:\n      return ideas.filter(t => t.completed)\n    case VisibilityFilters.SHOW_ACTIVE:\n      return ideas.filter(t => !t.completed)\n    default:\n      throw new Error('Unknown filter: ' + filter)\n  }\n}\n\nconst mapStateToProps = state => ({\n  ideas: getVisibleIdeas(state.ideas, state.visibilityFilter)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  toggleIdea: id => dispatch(toggleIdea(id))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(IdeaList)\n","import React from 'react'\nimport styled from 'styled-components';\nimport Header from './Header'\nimport Buttons from './Buttons'\nimport AddIdea from '../containers/AddIdea'\nimport VisibleIdeaList from '../containers/VisibleIdeaList'\n\nconst App = () => (\n    <>\n    <Header />\n    <Wrapper>\n      <AddIdea />\n      <Buttons />\n    </Wrapper>\n    <VisibleIdeaList />\n    </>\n)\n\nconst Wrapper = styled.div`\n  text-align: center;\n  max-width: 320px;\n  margin: 0 auto;\n`\n\nexport default App\n\n","\n\nconst ideas = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_IDEA':\n      return [\n        ...state,\n        {\n          id: action.id,\n          title: action.title,\n          text: action.text,\n          date: action.date,\n          completed: false\n        }\n      ]\n    case 'TOGGLE_IDEA':\n      return state.map(idea =>\n        (idea.id === action.id)\n          ? {...idea, completed: !idea.completed}\n          : idea\n      )\n    default:\n      return state\n  }\n}\n\nexport default ideas\n","import { VisibilityFilters } from '../actions'\n\nconst visibilityFilter = (state = VisibilityFilters.SHOW_ACTIVE, action) => {\n  switch (action.type) {\n    case 'SET_VISIBILITY_FILTER':\n      return action.filter\n    default:\n      return state\n  }\n}\n\nexport default visibilityFilter\n","import { combineReducers } from 'redux'\nimport ideas from './ideas'\nimport visibilityFilter from './visibilityFilter'\n\nexport default combineReducers({\n  ideas,\n  visibilityFilter\n})\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport './global.css';\nimport App from './components/App'\nimport rootReducer from './reducers'\n\nconst persistedState = localStorage.getItem('reduxState') ? JSON.parse(localStorage.getItem('reduxState')) : {}\n\nconst store = createStore(rootReducer, persistedState)\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\nstore.subscribe(()=>{ \n    localStorage.setItem('reduxState', JSON.stringify(store.getState())) \n})"],"sourceRoot":""}